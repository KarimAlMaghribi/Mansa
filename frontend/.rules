rules_version = '2';

service cloud.firestore {
   match /databases/{database}/documents {
    match /risks/{documentId} {
    	allow read: if resource.data.status == "published" || (request.auth != null && request.auth.uid == resource.data.uid);
      allow create, update: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    match /myRisks/{documentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create, update: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    match /userProfiles/{documentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;
      allow create, update: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    match /riskTypes/{documentId} {
    	allow read: if request.auth != null;
      allow create: if request.auth != null;
    }
    match /chats/{documentId} {
    	allow read: if request.auth != null && (resource.data.riskTaker.uid == request.auth.uid || resource.data.riskProvider.uid == request.auth.uid);
      allow create: if request.auth != null;

      match /messages/{messageId} {
        allow read: if request.auth != null &&
          (resource.data.uid == request.auth.uid || // Nachrichten von mir
           resource.parent.data.riskTaker.uid == request.auth.uid || // Als riskTaker
           resource.parent.data.riskProvider.uid == request.auth.uid); // Als riskProvider

        allow create: if request.auth != null &&
          (request.auth.uid == resource.parent.data.riskTaker.uid ||
           request.auth.uid == resource.parent.data.riskProvider.uid);
      }
    }
  }
}
